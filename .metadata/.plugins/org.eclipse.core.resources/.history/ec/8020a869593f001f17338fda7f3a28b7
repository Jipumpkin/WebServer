package com;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/JoinService")
public class JoinService extends HttpServlet {

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 문제
		// email, pw, phone, addr 4개의 데이터를
		// 자바 콘솔창에 출력하시오
		
		// 인코딩
		request.setCharacterEncoding("EUC-KR");
		
		
		// 응답하는 HTML문서에 글자나 태그를 작성하는 객체
		PrintWriter out = response.getWriter();
		
		String email = request.getParameter("email");
		String  pw = request.getParameter("pw");
		String phone = request.getParameter("phone");
		String  addr = request.getParameter("addr");
		
		System.out.println(email);
		System.out.println(pw);
		System.out.println(phone);
		System.out.println(addr);
		
		// 회원가입기능
		
//		Student stu = new Student(name, age, gender, major);
		
		// 1.동적 로딩 : 실행을 시키면 자료형이 결정되는 것
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// 기울임꼴 형태의 코드 : static(정적인 공간을 사용하는.)
			
			// 2가지 에러
			// Syntax Error (문법에러)
			// Exception (예외상황)
			
			// 2.데이터베이스 연결 권한 확인
			// 준비물 : id, pw, url
			String id = "hr";
			String dpw = "12345";
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			
			// jdbc:oracle:this - 오라클 thin 드라이버
			// @localhost - 나의 컴퓨터 ip주소를 가져와주는 메서드
			// 1521 : port번호
			// xe : 오라클DB의 별명(별칭)
			
			Connection con = DriverManager.getConnection(url,id,dpw);
			// DriverManager import 해줘야함
			// Connection import 해줘야함
			
			// con - 받아온 연결 권한
			
			// 3.쿼리문을 준비하자
			String sql = "INSERT INTO MEMBER VALUES(?,?,?,?)";
			// ? : 사용자가 입력한 값인데 내가 아직 사용자가 뭘 입력한지 모르기 때문
			
			PreparedStatement psmt = con.prepareStatement(sql);
			// import 작업하기 -db로 쿼리문을 가지고 이동하는 객체
			// ? 를 채우는 작업을 진행해보자
			
			psmt.setString(1, email);
			psmt.setString(2, pw);
			psmt.setString(3, phone);
			psmt.setString(4, addr);
			
			int cnt = psmt.executeUpdate();
			// executeUpdate : 쿼리문을 db로 이동시켜서 실행하고,
			// 결과값도 받아오는 기능을 가지고 있다.
			// 결과값은 테이블에 영향으 ㄹ받은 행이 있는지 없는지에 대해서 int자료형의 값을 가져온다.
			
			if(cnt>0) {
				System.out.println("추가 성공");
			}else {
				System.out.println("추가 실패");
			}
			
			
			
			
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("동적 로딩 실패");
			
			// OracleDriver
			// 1) ojdbc.jar 파일이 적용이 안되어있거나
			// 2) "" 경로가 잘못되었거나 - 오타
			
			
		} catch (SQLException e) {
			e.printStackTrace();
			System.out.println("권한 확인 실패");
		}
		
		// try ~ catch ~ finally
		// : 예외상황을 처리하는 문법

		
		response.sendRedirect("main.jsp");
		
		
		
		
		
	}

}
