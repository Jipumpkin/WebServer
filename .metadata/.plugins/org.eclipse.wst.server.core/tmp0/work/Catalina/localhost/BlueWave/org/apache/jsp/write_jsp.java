/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.90
 * Generated at: 2024-07-31 07:33:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.model.UserDTO;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.model.UserDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>글쓰기 - 커뮤니티</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"CSS/base.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        /* 전체 페이지 스타일 */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* 컨테이너 스타일 */\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 800px;\r\n");
      out.write("            margin: 100px auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            position: relative;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .communityName {\r\n");
      out.write("            display: block;\r\n");
      out.write("            font-size: 2em;\r\n");
      out.write("            margin-block-start: 0.67em;\r\n");
      out.write("            margin-block-end: 0.67em;\r\n");
      out.write("            margin-inline-start: 0px;\r\n");
      out.write("            margin-inline-end: 0px;\r\n");
      out.write("            unicode-bidi: isolate;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            font-style: italic;\r\n");
      out.write("            margin-bottom: 50px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group input[type=\"text\"],\r\n");
      out.write("        .form-group textarea {\r\n");
      out.write("            width: 97%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group textarea {\r\n");
      out.write("            resize: vertical;\r\n");
      out.write("            min-height: 200px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .submit-button {\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .submit-button:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");

    UserDTO info = (UserDTO) session.getAttribute("user");
    
      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        <nav>\r\n");
      out.write("            <div class=\"logo\">\r\n");
      out.write("                <a href=\"main.jsp\"> <img src=\"image/Blue Wave.png\" alt=\"Blue Wave Logo\"> </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"right-menu\">\r\n");
      out.write("                ");

                if (info != null) {
                
      out.write("\r\n");
      out.write("                    <a class=\"logNavBtn\" href=\"LogoutServlet\">로그아웃</a>\r\n");
      out.write("                ");

                } else {
                
      out.write("\r\n");
      out.write("                    <a class=\"logNavBtn\" href=\"login.jsp\">로그인</a>\r\n");
      out.write("                ");

                }
                
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <p class=\"communityName\" onclick=\"redirectToCommunity()\">VOICE of YOUTH</p>\r\n");
      out.write("        <h1>글쓰기</h1>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <form action=\"postSaveServlet\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                ");

                if (info != null && info.getUserId() != null) {
                
      out.write("\r\n");
      out.write("                    작성자 : ");
      out.print(info.getUserId());
      out.write("\r\n");
      out.write("                ");

                } else {
                
      out.write("\r\n");
      out.write("                    <script type=\"text/javascript\">\r\n");
      out.write("                        alert(\"로그인이 필요합니다.\");\r\n");
      out.write("                        window.location.href = \"login.jsp\";\r\n");
      out.write("                    </script>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"title\">제목:</label>\r\n");
      out.write("                <input type=\"text\" id=\"title\" name=\"title\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"content\">내용:</label>\r\n");
      out.write("                <textarea id=\"content\" name=\"content\" rows=\"10\" required></textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"file\">첨부파일:</label>\r\n");
      out.write("                <input type=\"file\" id=\"file\" name=\"file\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <button type=\"submit\" class=\"submit-button\">글 작성하기</button>\r\n");
      out.write("                <hr>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 웹페이지 최하단 -->\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"footer-container\">\r\n");
      out.write("            <img src=\"image/Blue Wave.png\" alt=\"Logo\" class=\"footer-logo\">\r\n");
      out.write("            <nav class=\"footer-nav\">\r\n");
      out.write("                <a href=\"#\">팀 소개</a>\r\n");
      out.write("                <a href=\"#\">이용약관</a>\r\n");
      out.write("                <a href=\"#\">개인정보처리방침</a>\r\n");
      out.write("                <a href=\"#\">시스템 문의</a>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function redirectToCommunity() {\r\n");
      out.write("            window.location.href = \"community.jsp\";\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
