/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.90
 * Generated at: 2024-07-30 08:12:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.model.UserDTO;
import com.model.UserDAO;

public final class editInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.model.UserDAO");
    _jspx_imports_classes.add("com.model.UserDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Blue Wave</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"CSS/baseStyle.css\">\r\n");
      out.write("<style>\r\n");
      out.write("    .container {\r\n");
      out.write("        max-width: 600px;\r\n");
      out.write("        margin: 20px auto;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        background-color: #f5f5f5;\r\n");
      out.write("        border-radius: 8px;\r\n");
      out.write("        margin-bottom: 120px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .container h2 {\r\n");
      out.write("        position: relative;\r\n");
      out.write("        right: 200px;\r\n");
      out.write("        margin: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .title {\r\n");
      out.write("        display: flex;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .myInfo {\r\n");
      out.write("        background-color: none;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        padding-left: 27px;\r\n");
      out.write("        width: 90%;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .profile {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .profile img {\r\n");
      out.write("        width: 100px;\r\n");
      out.write("        height: 100px;\r\n");
      out.write("        border-radius: 50%;\r\n");
      out.write("        background-color: #87CEEB;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .profile p {\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .info-grid {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        gap: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .info-row {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        padding: 10px 0;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .info-label {\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        width: 150px; /* Adjust as needed */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .infoContent {\r\n");
      out.write("    	background-color: #ffffff;\r\n");
      out.write("    	padding: 5px;\r\n");
      out.write("    	border-radius: 10px;\r\n");
      out.write("    	width: 40%;\r\n");
      out.write("    	margin-right: 20px;\r\n");
      out.write("    	text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .infoContentE {\r\n");
      out.write("    	background-color: #ffffff;\r\n");
      out.write("    	padding: 5px;\r\n");
      out.write("    	border-radius: 10px;\r\n");
      out.write("    	width: 120%;\r\n");
      out.write("    	margin-right: 20px;\r\n");
      out.write("    	text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .button-group {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        margin-top: 50px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .button {\r\n");
      out.write("        color: white;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .button-edit {\r\n");
      out.write("        background-color: #008CBA;\r\n");
      out.write("        padding: 10px 30px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        position: relative;\r\n");
      out.write("        left: 430px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .info-grid input {\r\n");
      out.write("    	border:none;\r\n");
      out.write("    	padding: 7px;\r\n");
      out.write("    	font-size: 15px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .info-grid select {\r\n");
      out.write("    	border:none;\r\n");
      out.write("    	padding: 7px;\r\n");
      out.write("    	font-size: 15px;\r\n");
      out.write("    	width: 43%;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("    function validateForm() {\r\n");
      out.write("        const birthdate = document.querySelector('input[name=\"userBirthdate\"]').value;\r\n");
      out.write("        const income = document.querySelector('input[name=\"userIncome\"]').value;\r\n");
      out.write("        const family = document.querySelector('input[name=\"userFamily\"]').value;\r\n");
      out.write("\r\n");
      out.write("        // 정규 표현식으로 8자리 숫자 검증\r\n");
      out.write("        const birthdatePattern = /^\\d{8}$/;\r\n");
      out.write("        const numericPattern = /^\\d+$/;\r\n");
      out.write("\r\n");
      out.write("        if (!birthdatePattern.test(birthdate)) {\r\n");
      out.write("            alert(\"생년월일은 8자리 숫자로 입력해 주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 생년월일 유효성 검사\r\n");
      out.write("        const year = parseInt(birthdate.substring(0, 4), 10);\r\n");
      out.write("        const month = parseInt(birthdate.substring(4, 6), 10);\r\n");
      out.write("        const day = parseInt(birthdate.substring(6, 8), 10);\r\n");
      out.write("\r\n");
      out.write("        if (!isValidDate(year, month, day)) {\r\n");
      out.write("            alert(\"올바른 생년월일을 입력해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (!numericPattern.test(income)) {\r\n");
      out.write("            alert(\"소득수준은 숫자만 입력해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (!numericPattern.test(family)) {\r\n");
      out.write("            alert(\"가구원수는 숫자만 입력해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function isValidDate(year, month, day) {\r\n");
      out.write("        // month는 1~12 범위여야 하며, day는 해당 월의 일수 범위여야 함\r\n");
      out.write("        if (month < 1 || month > 12) return false;\r\n");
      out.write("\r\n");
      out.write("        const daysInMonth = [31, (isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n");
      out.write("        return day > 0 && day <= daysInMonth[month - 1];\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function isLeapYear(year) {\r\n");
      out.write("        // 윤년 계산\r\n");
      out.write("        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n");
      out.write("    }\r\n");
      out.write("	function redirectToMain() {\r\n");
      out.write("	    window.location.href = \"main.jsp\";\r\n");
      out.write("	} \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");

	UserDTO info = (UserDTO) session.getAttribute("user");
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<header>\r\n");
      out.write("		<nav>\r\n");
      out.write("		    <div class=\"logo\">\r\n");
      out.write("		        <a href=\"#\"> <img src=\"image/Blue Wave.png\" alt=\"Blue Wave Logo\"  onclick=\"redirectToMain()\"> </a>\r\n");
      out.write("		    </div>\r\n");
      out.write("		\r\n");
      out.write("		    <div class=\"right-menu\">\r\n");
      out.write("		        ");

		        if (info != null) {
		        
      out.write("\r\n");
      out.write("		            <a class=\"logNavBtn\" href=\"LogoutServlet\">로그아웃</a>\r\n");
      out.write("		        ");

		        } else {
		        
      out.write("\r\n");
      out.write("		            <a class=\"logNavBtn\" href=\"login.jsp\">로그인</a>\r\n");
      out.write("		        ");

		        }
		        
      out.write("\r\n");
      out.write("		    </div>\r\n");
      out.write("		</nav>\r\n");
      out.write("	</header>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("	    <h2 class=\"title\">내 정보 수정</h2>\r\n");
      out.write("	    <form action=\"UpdateUserServlet\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("	        <div class=\"myInfo\">\r\n");
      out.write("				<div class=\"profile\">\r\n");
      out.write("				    ");

				    String gender = info != null ? info.getUserGender() : "";
				    String imagePath = "image/profile.png"; // 기본 이미지
				    if ("M".equals(gender)) {
				        imagePath = "image/male.jpg";
				    } else if ("F".equals(gender)) {
				        imagePath = "image/female.jpg";
				    }
				    
      out.write("\r\n");
      out.write("				    <img src=\"");
      out.print(imagePath);
      out.write("\" alt=\"Profile Image\">\r\n");
      out.write("				    <p>");
      out.print(info != null ? info.getUserName() : "");
      out.write(" 회원님<br>안녕하세요.</p>\r\n");
      out.write("				</div>\r\n");
      out.write("	            <div class=\"info-grid\">\r\n");
      out.write("	                <div class=\"info-row\">\r\n");
      out.write("	                    <div class=\"info-label\">이름</div>\r\n");
      out.write("	                    <input type=\"text\" name=\"userName\" class=\"infoContent\" value=\"");
      out.print(info != null ? info.getUserName() : "");
      out.write("\" placeholder=\"이름\">\r\n");
      out.write("	                    <div class=\"info-label\">성별</div>\r\n");
      out.write("	                    <select id=\"gender\" name=\"userGender\" class=\"infoContent\">\r\n");
      out.write("	                        <option value=\"M\" ");
      out.print( "M".equals(info != null ? info.getUserGender() : "") ? "selected" : "" );
      out.write(">남성</option>\r\n");
      out.write("	                        <option value=\"F\" ");
      out.print( "F".equals(info != null ? info.getUserGender() : "") ? "selected" : "" );
      out.write(">여성</option>\r\n");
      out.write("	                    </select>\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <div class=\"info-row\">\r\n");
      out.write("	                    <div class=\"info-label\">생년월일</div>\r\n");
      out.write("	                    <input type=\"text\" name=\"userBirthdate\" class=\"infoContent\" value=\"");
      out.print(info != null ? info.getUserBirthdate() : "");
      out.write("\" placeholder=\"생년월일\">\r\n");
      out.write("	                    <div class=\"info-label\">거주지역</div>\r\n");
      out.write("	                    <select id=\"addressSelect\" name=\"userRegion\" class=\"infoContent\">\r\n");
      out.write("	                        <option value=\"\">선택하세요</option>\r\n");
      out.write("	                        <option value=\"서울\" ");
      out.print( "서울".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">서울</option>\r\n");
      out.write("	                        <option value=\"부산\" ");
      out.print( "부산".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">부산</option>\r\n");
      out.write("	                        <option value=\"대구\" ");
      out.print( "대구".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">대구</option>\r\n");
      out.write("	                        <option value=\"인천\" ");
      out.print( "인천".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">인천</option>\r\n");
      out.write("	                        <option value=\"광주\" ");
      out.print( "광주".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">광주</option>\r\n");
      out.write("	                        <option value=\"대전\" ");
      out.print( "대전".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">대전</option>\r\n");
      out.write("	                        <option value=\"울산\" ");
      out.print( "울산".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">울산</option>\r\n");
      out.write("	                        <option value=\"경기\" ");
      out.print( "경기".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">경기</option>\r\n");
      out.write("	                        <option value=\"강원\" ");
      out.print( "강원".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">강원</option>\r\n");
      out.write("	                        <option value=\"충북\" ");
      out.print( "충북".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">충북</option>\r\n");
      out.write("	                        <option value=\"충남\" ");
      out.print( "충남".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">충남</option>\r\n");
      out.write("	                        <option value=\"전북\" ");
      out.print( "전북".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">전북</option>\r\n");
      out.write("	                        <option value=\"전남\" ");
      out.print( "전남".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">전남</option>\r\n");
      out.write("	                        <option value=\"경북\" ");
      out.print( "경북".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">경북</option>\r\n");
      out.write("	                        <option value=\"경남\" ");
      out.print( "경남".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">경남</option>\r\n");
      out.write("	                        <option value=\"제주\" ");
      out.print( "제주".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">제주</option>\r\n");
      out.write("	                        <option value=\"세종\" ");
      out.print( "세종".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">세종</option>\r\n");
      out.write("	                        <option value=\"중앙부처\" ");
      out.print( "중앙부처".equals(info != null ? info.getUserRegion() : "") ? "selected" : "" );
      out.write(">중앙부처</option>\r\n");
      out.write("	                    </select>\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <div class=\"info-row\">\r\n");
      out.write("	                    <div class=\"info-label\">이메일</div>\r\n");
      out.write("	                    <input type=\"email\" name=\"userEmail\" class=\"infoContentE\" value=\"");
      out.print(info != null ? info.getUserEmail() : "");
      out.write("\" placeholder=\"이메일\">\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <div class=\"info-row\">\r\n");
      out.write("	                    <div class=\"info-label\">재직상태</div>\r\n");
      out.write("	                    <select id=\"employment\" name=\"userJob\" class=\"infoContentE\">\r\n");
      out.write("	                        <option value=\"\">선택하세요</option>\r\n");
      out.write("	                        <option value=\"재직자\" ");
      out.print( "재직자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">재직자</option>\r\n");
      out.write("	                        <option value=\"자영업자\" ");
      out.print( "자영업자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">자영업자</option>\r\n");
      out.write("	                        <option value=\"미취업자\" ");
      out.print( "미취업자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">미취업자</option>\r\n");
      out.write("	                        <option value=\"프리랜서\" ");
      out.print( "프리랜서".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">프리랜서</option>\r\n");
      out.write("	                        <option value=\"일용근로자\" ");
      out.print( "일용근로자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">일용근로자</option>\r\n");
      out.write("	                        <option value=\"(예비)창업자\" ");
      out.print( "(예비)창업자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write("> (예비)창업자</option>\r\n");
      out.write("	                        <option value=\"단기근로자\" ");
      out.print( "단기근로자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">단기근로자</option>\r\n");
      out.write("	                        <option value=\"영농종사자\" ");
      out.print( "영농종사자".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">영농종사자</option>\r\n");
      out.write("	                        <option value=\"제한없음\" ");
      out.print( "제한없음".equals(info != null ? info.getUserJob() : "") ? "selected" : "" );
      out.write(">제한없음</option>\r\n");
      out.write("	                    </select>\r\n");
      out.write("	                    <div class=\"info-label\">관심분야</div>\r\n");
      out.write("	                    <select id=\"policyInterest\" name=\"userInterest\" class=\"infoContentE\">\r\n");
      out.write("	                        <option value=\"\">선택하세요</option>\r\n");
      out.write("	                        <option value=\"일자리\" ");
      out.print( "일자리".equals(info != null ? info.getUserPolicyInterest() : "") ? "selected" : "" );
      out.write(">일자리</option>\r\n");
      out.write("	                        <option value=\"주거\" ");
      out.print( "주거".equals(info != null ? info.getUserPolicyInterest() : "") ? "selected" : "" );
      out.write(">주거</option>\r\n");
      out.write("	                        <option value=\"교육\" ");
      out.print( "교육".equals(info != null ? info.getUserPolicyInterest() : "") ? "selected" : "" );
      out.write(">교육</option>\r\n");
      out.write("	                        <option value=\"복지.문화\" ");
      out.print( "복지.문화".equals(info != null ? info.getUserPolicyInterest() : "") ? "selected" : "" );
      out.write(">복지&문화</option>\r\n");
      out.write("	                        <option value=\"참여.권리\" ");
      out.print( "참여.권리".equals(info != null ? info.getUserPolicyInterest() : "") ? "selected" : "" );
      out.write(">참여&권리</option>\r\n");
      out.write("	                    </select>\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <div class=\"info-row\">\r\n");
      out.write("	                    <div class=\"info-label\">소득수준</div>\r\n");
      out.write("	                    <input type=\"text\" name=\"userIncome\" class=\"infoContent\" value=\"");
      out.print(info != null ? info.getUserIncome() : "");
      out.write("\" placeholder=\"소득수준\">\r\n");
      out.write("	                    <div class=\"info-label\">가구원수</div>\r\n");
      out.write("	                    <input type=\"text\" name=\"userFamily\" class=\"infoContent\" value=\"");
      out.print(info != null ? info.getUserFamily() : "");
      out.write("\" placeholder=\"가구원수\">\r\n");
      out.write("	                </div>\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <div class=\"button-group\">\r\n");
      out.write("	            <button type=\"submit\" class=\"button-edit\">수정하기</button>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 웹페이지 최하단 -->\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"footer-container\">\r\n");
      out.write("            <img src=\"image/Blue Wave.png\" alt=\"Logo\" class=\"footer-logo\">\r\n");
      out.write("            <nav class=\"footer-nav\">\r\n");
      out.write("                <a href=\"#\">팀 소개</a>\r\n");
      out.write("                <a href=\"#\">이용약관</a>\r\n");
      out.write("                <a href=\"#\">개인정보처리방침</a>\r\n");
      out.write("                <a href=\"#\">시스템 문의</a>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
